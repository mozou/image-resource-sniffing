name: 构建Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 构建APK使用自定义Docker
      run: |
        # 创建自定义Dockerfile
        cat > Dockerfile << 'EOF'
        FROM ubuntu:20.04

        # 避免交互式安装
        ENV DEBIAN_FRONTEND=noninteractive
        ENV TZ=Asia/Shanghai

        # 安装基础依赖
        RUN apt-get update && apt-get install -y \
            python3 \
            python3-pip \
            python3-dev \
            build-essential \
            git \
            unzip \
            zip \
            openjdk-8-jdk \
            wget \
            curl \
            && rm -rf /var/lib/apt/lists/*

        # 设置Java环境
        ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

        # 安装Python依赖
        RUN pip3 install --upgrade pip
        RUN pip3 install buildozer==1.4.0 cython==0.29.33 kivy==2.1.0 requests

        # 创建工作目录
        WORKDIR /app

        # 复制项目文件
        COPY . /app/

        # 设置权限
        RUN chmod -R 755 /app

        # 构建APK
        CMD ["buildozer", "android", "debug"]
        EOF
        
        # 构建Docker镜像
        echo "🔨 构建Docker镜像..."
        docker build -t image-sniffer-build .
        
        # 运行容器构建APK
        echo "🚀 开始构建APK..."
        docker run --name build-container -v $(pwd)/bin:/app/bin image-sniffer-build
        
        # 检查构建结果
        if [ -f "bin/*.apk" ]; then
          echo "🎉 构建成功！"
          ls -la bin/
        else
          echo "❌ 构建失败，检查容器日志..."
          docker logs build-container
        fi
        
        # 清理容器
        docker rm build-container || true
        
    - name: 上传APK文件
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: 图片资源嗅探工具-debug
        path: bin/*.apk
        retention-days: 30
        
    - name: 创建Release
      if: github.ref == 'refs/heads/main' && success()
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: 图片资源嗅探工具 v${{ github.run_number }}
        body: |
          ## 📱 Android APK 自动构建
          
          这是通过GitHub Actions自动构建的Android APK文件。
          
          ### 📋 版本信息
          - 构建时间: ${{ github.event.head_commit.timestamp }}
          - 提交SHA: ${{ github.sha }}
          - 构建编号: ${{ github.run_number }}
          
          ### 📥 安装说明
          1. 下载下方的APK文件
          2. 在Android设备上启用"未知来源"应用安装
          3. 安装APK并授予必要权限
          4. 开始使用图片资源嗅探功能
          
          ### ⚠️ 注意事项
          - 需要Android 5.0+（API 21+）
          - 需要网络和存储权限
          - 图片保存在下载目录
        files: bin/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
